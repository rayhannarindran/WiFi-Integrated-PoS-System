services:
  # Node.js Backend Service
  backend:
    build:
      context: .  # Path to the backend folder
      dockerfile: backend/Dockerfile  # Dockerfile for Node.js backend
    ports:
      - "3001:3001"  # Expose Node.js backend on port 3001
    environment:
      - RUNNING_IN_DOCKER=true
    privileged: true
    networks:
      - wifi-pos-network

  # Python API Service
  python-api:
    build:
      context: .  # Path to the backend folder
      dockerfile: backend/Dockerfile.python  # Dockerfile for Python API
    ports:
      - "4001:4001"  # Expose Python API on port 4001
    environment:
      - RUNNING_IN_DOCKER=true
    networks:
      - wifi-pos-network

  # Frontend Service
  frontend-admin:
    build:
      context: . # Path to the frontend folder
      dockerfile: frontend-admin/Dockerfile  # Dockerfile for frontend
    ports:
      - "5001:5001"  # Expose frontend on port 5001
    environment:
      - VITE_RUNNING_IN_DOCKER=true
    networks:
      - wifi-pos-network

  frontend-operator:
    build:
      context: . # Path to the frontend folder
      dockerfile: frontend-operator/Dockerfile  # Dockerfile for frontend
    ports:
      - "5002:5002"  # Expose frontend on port 5002
    environment:
      - VITE_RUNNING_IN_DOCKER=true
    networks:
      - wifi-pos-network

  mongodb:
    image: mongo:7.0.15-jammy
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: wifi-pos
    volumes:
      - mongodb-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - wifi-pos-network

networks:
  wifi-pos-network:
    driver: bridge

volumes:
  mongodb-data: